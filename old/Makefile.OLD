#
#
# Makefile for various small c programs
#
#
CC = gcc
RM = rm -f
ECHO = echo
CFLAGS = -W -Wall -Wshadow -Wcast-qual -Wwrite-strings -Wunused -D_XOPEN_SOURCE=700 -g
CPPFLAGS += -I../include/

# Add this as CPPFLAGS if you want to have bind authentication
PCFLAGS = -DLDAP_DEPRECATED

GCFLAGS = `pkg-config --cflags glib-2.0`
GLDFLAGS = `pkg-config --libs-only-L glib-2.0`
GLIBS = `pkg-config --libs-only-l glib-2.0`
LLDFLAGS = -L/lib/x86_64-linux-gnu -lldap
SLDFLAGS = -L/lib/x86_64-linux-gnu -lcrypto
bin_PROGRAMS = lcd tsha gsha gsha2 sha1 lct ssha lcc
shared_SOURCES = ldap-rep.c
lsc_SOURCES = ssl-config.c
lcc_SOURCES = containers.c
ltc_SOURCES = test-ldap-connection.c
lct_SOURCES = test-ldap-connection.c
ssha_SOURCES = ssha1.c
lcd_SOURCES = domains.c
sha_SOURCES = sha.c
tsha_SOURCES = sha1.c base-sha.c $(shared_SOURCES)
sha1_SOURCES = sha1.c
gsha_SOURCES = glib-sha1.c base-sha.c $(shared_SOURCES)
gsha2_SOURCES = glib-sha1-2.c base-sha.c $(shared_SOURCES)
gsha3_SOURCES = glib-sha1-3.c $(shared_SOURCES)

all:	$(bin_PROGRAMS)

old:	$(bin_PROGRAMS)

tsha:	$(tsha_SOURCES)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(GCFLAGS) -o $@ $(tsha_SOURCES) $(SLDFLAGS) $(GLIBS)

gsha:	$(gsha_SOURCES)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(GCFLAGS) -o $@ $(gsha_SOURCES) $(SLDFLAGS) $(GLIBS)

gsha2:	$(gsha2_SOURCES)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(GCFLAGS) -o $@ $(gsha2_SOURCES) $(SLDFLAGS) $(GLIBS)

lcd:	$(lcd_SOURCES)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(GCFLAGS) -o $@ $(lcd_SOURCES) $(SLDFLAGS) $(GLIBS)

sha1:	$(sha1_SOURCES)
	$(CC) $(CFLAGS) $(CPPFLAGS) -o $@ $(sha1_SOURCES) $(SLDFLAGS)

sha:	$(sha_SOURCES)
	$(CC) $(CFLAGS) $(CPPFLAGS) -s $@ $(sha_SOURCES) $(SLDFLAGS)

lct:	$(lct_SOURCES)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(PCFLAGS) -o $@ $(lct_SOURCES) $(LLDFLAGS)

ssha:	$(ssha_SOURCES)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(GCFLAGS) -o $@ $(ssha_SOURCES) $(GLIBS)
	
clean:
	$(RM) *.o $(bin_PROGRAMS)
